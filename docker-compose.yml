services:
  mysql:
    image: docker.io/mysql:8.4.6
    container_name: lesson-docker.mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ldocker
  #redis
  redis:
    image: docker.io/redis:7.4-alpine
    container_name: lesson-docker.redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ldocker
    # пароль для Redis
    command: redis-server
      --requirepass ${REDIS_PASSWORD:-secret}
      --appendonly yes
      --appendfsync everysec
      --save 300 1
      --save 60 5
      --save 10 100

  nginx:
    image: docker.io/nginx:1.29.2
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/html
    networks:
      - ldocker

  laravel:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD:-secret}
      REDIS_PORT: 6379
    volumes:
      - ./backend:/var/www/html
    restart: always
    networks:
      - ldocker
    depends_on:
      - mysql
      - redis

  phpmyadmin:
    image: docker.io/phpmyadmin:5.2.3
    container_name: phpmyadmin
    restart: always
    ports:
      - "3306:80"
    environment:
      - UPLOAD_LIMIT=2G
      - PMA_HOST=${DB_HOST}
      - PMA_PORT=${DB_PORT}
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    networks:
      - ldocker

  nuxtjs:
    image: docker.io/node:24.10.0
    container_name: lesson-docker.nuxtjs
    restart: always
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - ldocker
    command: sh -c "npm install && npm run dev"

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ldocker:
    driver: bridge